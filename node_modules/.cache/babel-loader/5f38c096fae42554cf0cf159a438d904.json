{"ast":null,"code":"var _jsxFileName = \"/home/jefferson/\\xC1rea de Trabalho/estudos/letmeask/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Home } from './pages/Home';\nimport { NewRoom } from './pages/NewRoom';\nimport { auth, firebase } from './services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState({});\n\n  function signInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider).then(result => {\n      if (result.user) {\n        const {\n          displayName,\n          photoURL,\n          uid\n        } = result.user;\n\n        if (!displayName || !photoURL) {\n          throw new Error('Missing information from Goolge Account.');\n        }\n\n        setUser({\n          id: uid,\n          name: displayName,\n          avatar: photoURL\n        });\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        user,\n        signInWithGoogle\n      },\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/rooms/new\",\n        component: NewRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cCRtNmj6gRKVA5wOmLEmdl385z4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/jefferson/Área de Trabalho/estudos/letmeask/src/App.tsx"],"names":["createContext","useState","BrowserRouter","Route","Home","NewRoom","auth","firebase","AuthContext","App","user","setUser","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","then","result","displayName","photoURL","uid","Error","id","name","avatar"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAoC,kBAApC;AAEA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,qBAA/B;;AAaA,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC,EAAD,CAAjC;;AAEP,SAASS,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASW,gBAAT,GAA4B;AAC1B,UAAMC,QAAQ,GAAG,IAAIN,QAAQ,CAACD,IAAT,CAAcQ,kBAAlB,EAAjB;AAEIR,IAAAA,IAAI,CAACS,eAAL,CAAqBF,QAArB,EAA+BG,IAA/B,CAAoCC,MAAM,IAAI;AAC1C,UAAIA,MAAM,CAACP,IAAX,EAAiB;AACf,cAAM;AAAEQ,UAAAA,WAAF;AAAeC,UAAAA,QAAf;AAAyBC,UAAAA;AAAzB,YAAiCH,MAAM,CAACP,IAA9C;;AAEA,YAAI,CAACQ,WAAD,IAAgB,CAACC,QAArB,EAA+B;AAC7B,gBAAM,IAAIE,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAEDV,QAAAA,OAAO,CAAC;AACNW,UAAAA,EAAE,EAAEF,GADE;AAENG,UAAAA,IAAI,EAAEL,WAFA;AAGNM,UAAAA,MAAM,EAAEL;AAHF,SAAD,CAAP;AAKD;AACJ,KAdD;AAeL;;AAED,sBACE,QAAC,aAAD;AAAA,2BACA,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAET,QAAAA,IAAF;AAAQE,QAAAA;AAAR,OAA7B;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAER;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,SAAS,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA/BQI,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import { createContext, useState } from 'react'\nimport { BrowserRouter, Route} from 'react-router-dom'\n\nimport { Home } from './pages/Home';\nimport { NewRoom } from './pages/NewRoom';\nimport { auth, firebase } from './services/firebase';\n\ntype User = {\n  id: string,\n  name: string,\n  avatar: string\n}\n\ntype AuthContextType = {\n  user: User;\n  signInWithGoogle: () => void;\n}\n\nexport const AuthContext = createContext({} as AuthContextType);\n\nfunction App() {\n  const [user, setUser] = useState({});\n\n  function signInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n\n        auth.signInWithPopup(provider).then(result => {\n            if (result.user) {\n              const { displayName, photoURL, uid } = result.user\n\n              if (!displayName || !photoURL) {\n                throw new Error('Missing information from Goolge Account.')\n              }\n\n              setUser({\n                id: uid,\n                name: displayName,\n                avatar: photoURL\n              })\n            }\n        })\n  }\n\n  return (\n    <BrowserRouter>\n    <AuthContext.Provider value={{ user, signInWithGoogle }}>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/rooms/new\" component={NewRoom} />\n    </AuthContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}