{"ast":null,"code":"var _jsxFileName = \"/home/jefferson/\\xC1rea de Trabalho/estudos/letmeask/src/pages/AdminRoom.tsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport logoImg from \"../assets/images/logo.svg\";\nimport deleteImg from \"../assets/images/delete.svg\";\nimport { Button } from '../components/Button';\nimport { Question } from '../components/Question';\nimport { RoomCode } from '../components/RoomCode'; //import { useAuth } from '../hooks/useAuth';\n\nimport { useRoom } from '../hooks/useRoom';\nimport '../styles/room.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AdminRoom() {\n  _s();\n\n  //const { user } = useAuth();\n  const params = useParams();\n  const roomId = params.id;\n  const {\n    title,\n    questions\n  } = useRoom(roomId);\n\n  function handleDeleteQuestion(questionId) {\n    if (window.confirm('Tem certeza que vocẽ deseja excluir está ppergunta?')) {}\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"Letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(RoomCode, {\n            code: roomId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            isOutlined: true,\n            children: \"Encerrar sala\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Sala \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [questions.length, \" pergunta(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-list\",\n        children: questions.map(question => {\n          return /*#__PURE__*/_jsxDEV(Question, {\n            content: question.content,\n            author: question.author,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleDeleteQuestion(),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: deleteImg,\n                alt: \"Remover pergunta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this)\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminRoom, \"ITJSlEzuts1k3sx7KJfSuP5Uqao=\", false, function () {\n  return [useParams, useRoom];\n});\n\n_c = AdminRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoom\");","map":{"version":3,"sources":["/home/jefferson/Área de Trabalho/estudos/letmeask/src/pages/AdminRoom.tsx"],"names":["useParams","Button","Question","RoomCode","useRoom","AdminRoom","params","roomId","id","title","questions","handleDeleteQuestion","questionId","window","confirm","logoImg","length","map","question","content","author","deleteImg"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;;;AAKA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,wBAAzB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAO,qBAAP;;AAMA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AACxB;AACA,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,MAAM,GAAGD,MAAM,CAACE,EAAtB;AAEA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBN,OAAO,CAACG,MAAD,CAApC;;AAEA,WAASI,oBAAT,CAA8BC,UAA9B,EAAkD;AAC9C,QAAIC,MAAM,CAACC,OAAP,CAAe,qDAAf,CAAJ,EAA2E,CAE1E;AACJ;;AAED,sBACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,4BACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEC,OAAV;AAAmB,UAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,kCACI,QAAC,QAAD;AAAU,YAAA,IAAI,EAAER;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,UAAU,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA,8BAAUE,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEMC,SAAS,CAACM,MAAV,GAAmB,CAAnB,iBAAwB;AAAA,qBAAON,SAAS,CAACM,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF9B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACKN,SAAS,CAACO,GAAV,CAAcC,QAAQ,IAAI;AACvB,8BACI,QAAC,QAAD;AAEI,YAAA,OAAO,EAAEA,QAAQ,CAACC,OAFtB;AAGI,YAAA,MAAM,EAAED,QAAQ,CAACE,MAHrB;AAAA,mCAKI;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,OAAO,EAAE,MAAMT,oBAAoB,EAFvC;AAAA,qCAII;AAAK,gBAAA,GAAG,EAAEU,SAAV;AAAqB,gBAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AALJ,aACSH,QAAQ,CAACV,EADlB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAcH,SAfA;AADL;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH;;GApDeH,S;UAEGL,S,EAGcI,O;;;KALjBC,S","sourcesContent":["import { useParams } from 'react-router-dom';\n\nimport logoImg from '../assets/images/logo.svg';\nimport deleteImg from '../assets/images/delete.svg'\n\nimport { Button } from '../components/Button';\nimport { Question } from '../components/Question';\nimport { RoomCode } from '../components/RoomCode';\n\n//import { useAuth } from '../hooks/useAuth';\nimport { useRoom } from '../hooks/useRoom';\n\nimport '../styles/room.scss';\n\ntype RoomParams = {\n    id: string;\n}\n\nexport function AdminRoom() {\n    //const { user } = useAuth();\n    const params = useParams<RoomParams>();\n    const roomId = params.id; \n    \n    const { title, questions } = useRoom(roomId);\n\n    function handleDeleteQuestion(questionId: string) {\n        if (window.confirm('Tem certeza que vocẽ deseja excluir está ppergunta?')) {\n            \n        }\n    }\n\n    return (\n        <div id=\"page-room\">\n            <header>\n                <div className=\"content\">\n                    <img src={logoImg} alt=\"Letmeask\" />\n                    <div>\n                        <RoomCode code={roomId}/>\n                        <Button isOutlined >Encerrar sala</Button>\n                    </div>\n                </div>\n            </header>\n\n            <main>\n                <div className=\"room-title\">\n                    <h1>Sala {title}</h1>\n                    { questions.length > 0 && <span>{questions.length} pergunta(s)</span> }\n                </div>\n\n                <div className=\"question-list\">\n                    {questions.map(question => {\n                        return (\n                            <Question\n                                key={question.id}\n                                content={question.content}\n                                author={question.author}\n                            >\n                                <button\n                                    type=\"button\"\n                                    onClick={() => handleDeleteQuestion()}\n                                >\n                                    <img src={deleteImg} alt=\"Remover pergunta\" />\n                                </button>\n                            </Question>\n                        )\n                    })}\n                </div>\n            </main>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}