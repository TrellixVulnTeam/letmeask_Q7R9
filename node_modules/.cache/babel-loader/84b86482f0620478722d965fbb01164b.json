{"ast":null,"code":"import _regeneratorRuntime from\"/home/jefferson/\\xC1rea de Trabalho/estudos/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/jefferson/\\xC1rea de Trabalho/estudos/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/jefferson/\\xC1rea de Trabalho/estudos/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{createContext,useEffect,useState}from'react';import{auth,firebase}from'../services/firebase';import{jsx as _jsx}from\"react/jsx-runtime\";export var AuthContext=/*#__PURE__*/createContext({});export function AuthContextProvider(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];useEffect(function(){var unsubscribe=auth.onAuthStateChanged(function(user){if(user){var displayName=user.displayName,photoURL=user.photoURL,uid=user.uid;if(!displayName||!photoURL){throw new Error('Missing information from Goolge Account.');}setUser({id:uid,name:displayName,avatar:photoURL});}});return function(){unsubscribe();};},[]);function signInWithGoogle(){return _signInWithGoogle.apply(this,arguments);}function _signInWithGoogle(){_signInWithGoogle=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var provider,result,_result$user,displayName,photoURL,uid;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:provider=new firebase.auth.GoogleAuthProvider();_context.next=3;return auth.signInWithPopup(provider);case 3:result=_context.sent;if(!result.user){_context.next=9;break;}_result$user=result.user,displayName=_result$user.displayName,photoURL=_result$user.photoURL,uid=_result$user.uid;if(!(!displayName||!photoURL)){_context.next=8;break;}throw new Error('Missing information from Goolge Account.');case 8:setUser({id:uid,name:displayName,avatar:photoURL});case 9:case\"end\":return _context.stop();}}},_callee);}));return _signInWithGoogle.apply(this,arguments);}return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user:user,signInWithGoogle:signInWithGoogle},children:props.children});}","map":{"version":3,"sources":["/home/jefferson/Área de Trabalho/estudos/letmeask/src/contexts/AuthContext.tsx"],"names":["createContext","useEffect","useState","auth","firebase","AuthContext","AuthContextProvider","props","user","setUser","unsubscribe","onAuthStateChanged","displayName","photoURL","uid","Error","id","name","avatar","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","result","children"],"mappings":"8fAAA,OAASA,aAAT,CAAmCC,SAAnC,CAA8CC,QAA9C,KAA8D,OAA9D,CAEA,OAASC,IAAT,CAAeC,QAAf,KAA+B,sBAA/B,C,2CAiBA,MAAO,IAAMC,CAAAA,WAAW,cAAGL,aAAa,CAAC,EAAD,CAAjC,CAEP,MAAO,SAASM,CAAAA,mBAAT,CAA6BC,KAA7B,CAA+D,CAClE,cAAwBL,QAAQ,EAAhC,wCAAOM,IAAP,eAAaC,OAAb,eAEAR,SAAS,CAAC,UAAM,CACZ,GAAMS,CAAAA,WAAW,CAAGP,IAAI,CAACQ,kBAAL,CAAwB,SAAAH,IAAI,CAAI,CACpD,GAAIA,IAAJ,CAAU,CACN,GAAQI,CAAAA,WAAR,CAAuCJ,IAAvC,CAAQI,WAAR,CAAqBC,QAArB,CAAuCL,IAAvC,CAAqBK,QAArB,CAA+BC,GAA/B,CAAuCN,IAAvC,CAA+BM,GAA/B,CAEA,GAAI,CAACF,WAAD,EAAgB,CAACC,QAArB,CAA+B,CAC/B,KAAM,IAAIE,CAAAA,KAAJ,CAAU,0CAAV,CAAN,CACC,CAEDN,OAAO,CAAC,CACRO,EAAE,CAAEF,GADI,CAERG,IAAI,CAAEL,WAFE,CAGRM,MAAM,CAAEL,QAHA,CAAD,CAAP,CAKH,CACA,CAdmB,CAApB,CAgBA,MAAO,WAAM,CACbH,WAAW,GACV,CAFD,CAGH,CApBQ,CAoBN,EApBM,CAAT,CAHkE,QAyBnDS,CAAAA,gBAzBmD,0JAyBlE,6LACUC,QADV,CACqB,GAAIhB,CAAAA,QAAQ,CAACD,IAAT,CAAckB,kBAAlB,EADrB,uBAGyBlB,CAAAA,IAAI,CAACmB,eAAL,CAAqBF,QAArB,CAHzB,QAGUG,MAHV,mBAKQA,MAAM,CAACf,IALf,sCAM2Ce,MAAM,CAACf,IANlD,CAMYI,WANZ,cAMYA,WANZ,CAMyBC,QANzB,cAMyBA,QANzB,CAMmCC,GANnC,cAMmCA,GANnC,MAQQ,CAACF,WAAD,EAAgB,CAACC,QARzB,+BASc,IAAIE,CAAAA,KAAJ,CAAU,0CAAV,CATd,QAYIN,OAAO,CAAC,CACJO,EAAE,CAAEF,GADA,CAEJG,IAAI,CAAEL,WAFF,CAGJM,MAAM,CAAEL,QAHJ,CAAD,CAAP,CAZJ,sDAzBkE,mDA6ClE,mBACI,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAAEL,IAAI,CAAJA,IAAF,CAAQW,gBAAgB,CAAhBA,gBAAR,CAA7B,UACKZ,KAAK,CAACiB,QADX,EADJ,CAKH","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from 'react';\n\nimport { auth, firebase } from '../services/firebase';\n\ntype User = {\n    id: string,\n    name: string,\n    avatar: string\n}\n  \ntype AuthContextType = {\n    user: User | undefined;\n    signInWithGoogle: () => Promise<void>;\n}\n\ntype AuthContextProviderProps = {\n    children: ReactNode;\n}\n\nexport const AuthContext = createContext({} as AuthContextType);\n\nexport function AuthContextProvider(props : AuthContextProviderProps) {\n    const [user, setUser] = useState<User>();\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n        if (user) {\n            const { displayName, photoURL, uid } = user\n\n            if (!displayName || !photoURL) {\n            throw new Error('Missing information from Goolge Account.')\n            }\n    \n            setUser({\n            id: uid,\n            name: displayName,\n            avatar: photoURL\n            })\n        }\n        })\n\n        return () => {\n        unsubscribe();\n        }\n    }, []);\n\n    async function signInWithGoogle() {\n        const provider = new firebase.auth.GoogleAuthProvider();\n\n        const result = await auth.signInWithPopup(provider);\n\n        if (result.user) {\n        const { displayName, photoURL, uid } = result.user\n\n        if (!displayName || !photoURL) {\n            throw new Error('Missing information from Goolge Account.')\n        }\n\n        setUser({\n            id: uid,\n            name: displayName,\n            avatar: photoURL\n        })\n        }\n    }\n\n    return (\n        <AuthContext.Provider value={{ user, signInWithGoogle }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}